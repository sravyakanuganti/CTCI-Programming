import java.util.HashMap;
import java.util.Map;

/*
 * To check if a string is permutation of the other string.
 * Brute force:
 */
public class CheckPermutation {
	
	/*
	 * 
	 */
	
	public boolean IsPermutation(String a, String b)
	{
		if(a.length() != b.length())
			return false;
		
		int count = 0;
		
		Map<Character, Integer> charCount = new HashMap<>();
		for(int i = 0; i < a.length(); i++)
		{
			count = charCount.getOrDefault(a.charAt(i), 0);
			charCount.put(a.charAt(i), ++count);
		}
		
		for(int i = 0; i < b.length(); i++)
		{
			if(!charCount.containsKey(b.charAt(i)))
				return false;
			
			count = charCount.get(b.charAt(i));
			
			if(count <= 0)
				return false;
			
			charCount.put(b.charAt(i), --count);
		}
		
		return true;
		
	}
	
	public static void main(String args[])
	{
		CheckPermutation check = new CheckPermutation();
		System.out.println(check.IsPermutation("ban", "banana"));
	}

}
